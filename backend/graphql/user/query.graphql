input userFilter {
    keyword: String
    role_id: ID
    team: ID #filter to get users that is not on the team provided yet
}

input userSort {
    reputation: String
}

extend type Query {
    user(slug: String! @eq): User @guard(with: ["api"]) @find
    allUsers(filter: userFilter @spread): [User!]! @guard(with: ["api"])
    users(filter: userFilter @spread, sort: userSort @spread): [User!]!
        @guard(with: ["api"])
        @paginate(builder: "App\\GraphQL\\Queries\\Users")
    teamLeaders: [User!] @guard(with: ["api"])
    me: User @guard(with: ["api"]) @auth
    userTeams(id: ID!): [Member!]!
        @guard(with: ["api"])
        @paginate(builder: "App\\GraphQL\\Queries\\UserTeams")
}
